####Instruccions generals:####
*Executar el Main (make run)
*Introduir 1 per entrar a 'Load Environment File'
*De la llista d'entorns, carregar el que es vulgui probar.
*Introduir 1, per probar a generar l'horari. ('Generate New Schedule')
*Per tornar enrere, i provar un altre entorn, indroduir 0, 0, 1.

##Prova 1##
Objectius: Provar a generar un horari d'un entorn possible realista.  

Carregarem l'arxiu 'Q1+Q2.json'
Aquet entorn conté moltes aules, moltes asignatures, i molts grups, simulant una situació real.

Sortida esperada: Podem observar totes les aules, assignatures, grups, etc. a la interfície, i 
en pode obtenir la seva informació.

##Prova 2##
Objectius: Provar la restricció de CorequisitRestriction.
On dos grups amb el mateix parentCode de dues assignatures correquisites entre elles no poden anar a un mateix dia i hora.

Carregarem l'arxiu 'provaCorequisit.json'
En aquet entorn, tenim un grup 10 de M2, i un grup 10 de PRO1, on PRO1 es corequisit de M2, i per tant, no es podran solapar, tot hi haver-hi dos aules.



##Prova 3##
Objectius: Provar la restricció de SubjectLevel.
On dos grups d'assignatures del mateix nivell no poden anar al mateix dia i hora si tenen el mateix codi i són del mateix tipus.

Carregarem l'arxiu 'provaSubjectLevel.json'
En aquet entorn els dos grups son grups de teoria 10 i del mateix nivell i per tant, no es podran solapar, tot hi haver-hi dos aules.


##Prova 4##
Objectius: Provar la restricció de ParentGroupOverlap.
On un subgrup (31, 45...) no pot anar al mateix dia i hora que el seu grup pare (30, 40...).

Carregarem l'arxiu 'provaParentGroupOverlap.json'
En aquet entorn un grup es M2 30, i l'altre M2 33, per tant no es poden solapar.


##Prova 5##
Objectius: Provar la restricció de LectureFromSameGroupOverlap.
Un grup 

Carregarem l'arxiu 'provaLectureFromSameGroupOverlap.json'
En aquet entorn un grup es M2 30 i no pot anar a dues aules diferents en un mateix dia i hora.


##Prova 6##
Objectius: Provar si es genera o no un horari en condicions que no s'hauria de generar.

Carregarem l'arxiu 'provaNoTime1.json'
En aquet entorn, hi ha un grup de només matins que requereix una classe de 7 hores. Com que el matí nomes te 6 hores, no es troba cap horari valid.

Sortida esperada:
Error. No Valid Schedule Found

##Prova 7##
Objectius: Provar si es genera o no un horari en condicions que no s'hauria de generar.

Carregarem l'arxiu 'provaNoTime2.json'
En aquet entorn, hi ha un grup de només matins que requereix 6 classes de 5 hores. Com que nomes hi ha 5 matins (dill-div), no es troba cap horari valid.

Sortida esperada:
Error. No Valid Schedule Found

##Prova 8##
Objectius: Provar a generar un horari desde un entorn buit (sense aules ni grups).

Carregarem l'arxiu 'provaEmpty.json'
L'horari generat està buit.

##Prova 9##
Objectius: Mirar que el llistat de restriccions d'un entorn sigui el correcte.

Carregarem l'arxiu 'provaNoTime2.json'
Hi ha un sol grup que pot anar nom�s de matins. Aquesta ser� l'�nica restricci� un�ria.
De restricci� n-�ries tindrem les que ho comproven tot:
  � ParentGroupOverlapRestriction
  � LectureFromSameGroupOverlapRestriction
  � OccupiedRoomRestriction
  � CorrequisitRestriction
  � SubjectLevelRestriction

Sortida esperada:
Un-ary restrictions
--------------------------
  | PRO1-10-THEORY: DayPeriodRestriction-6-MORNING

N-ary restrictions
--------------------------
  | ParentGroupOverlapRestriction
  | LectureFromSameGroupOverlapRestriction
  | OccupiedRoomRestriction
  | CorrequisitRestriction
  | SubjectLevelRestriction
--------------------------
 0| Back
--------------------------

##Prova 10##
Objectius: Mirar que el llistat de grups d'un entorn sigui el correcte.

Carregarem l'arxiu 'provaSubjectLevel.json'
En aquest entorn nom�s hi ha 2 grups.

Sortida esperada:
Groups
--------------------------
  | FM-10-THEORY
  | PRO1-10-THEORY
--------------------------
 0| Back
--------------------------

##Prova 11##
Objectius: Mirar que el llistat d'assignatures d'un entorn sigui el correcte.

Carregarem l'arxiu 'provaSubjectLevel.json'
En aquest entorn nom�s hi ha 2 assignatures.

Sortida esperada:
Subjects
--------------------------
  | PRO1
  | FM
--------------------------
 0| Back
--------------------------

##Prova 12##
Objectius: Mirar que el llistat d'aules d'un entorn sigui el correcte.

Carregarem l'arxiu 'provaSubjectLevel.json'
En aquest entorn nom�s hi ha 2 aules.

Sortida esperada:
Rooms
--------------------------
  | A6002
  | A6001
--------------------------
 0| Back
--------------------------

##Prova 13##
Objectius: Mirar que funcioni correctament el carregar horari existent.

Carreguem l'entorn 'provaCorequisit.json'
Carregarem l'arxiu 'sparseSchedule.json'


##Prova 14##
Objectius: Mirar que el funcioni correctament el guardat d'horaris generats.

Carregarem l'arxiu 'provaSubjectLevel.json'
Generem un horari
Guardarem l'horari amb el nom 'Prova 14'
Ara el carregarem